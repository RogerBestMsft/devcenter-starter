# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "AddWorkflow" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build_configuration_matrix:
    runs-on: ubuntu-latest

    outputs:
      matrix: ${{ steps.configuration-matrix.outputs.matrix }}
    steps:

      - uses: actions/checkout@v2

      - name: set-configuration_matrix
        id: configuration-matrix
        working-directory: ./devCenter/config
        run: echo "matrix=$(ls | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  build_devcenters:
    # Matrix of subscriptions
    strategy:
      matrix:
        configurations: ${{ fromJson(needs.build_configuration_matrix.outputs.matrix) }}

        # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build_configuration_matrix

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Get data from matrix file
          
      # Connect to cli using openid auth
      #- name: 'Az CLI login'
      #  uses: azure/login@v1
      #  with:
      #      client-id: ${{ matrix.CLIENT_ID }}
      #      tenant-id: ${{ matrix.TENANT_ID }}
      #      subscription-id: ${{ matrix.SUBSCRIPTION_ID }}
      - name: 'Get Subscription Id'
        id: SubscriptionId
        working-directory: ./devCenter/config
        run: echo "SUBSCRIPTIONID=$(jq --raw-output .subscription ${{ matrix.configurations }})" >> $GITHUB_OUTPUT

      - name: 'Test matrix'
        run: echo ${{ steps.SubscriptionId.outputs}}
      #  run: bash setup.sh -s $subscriptionId -c file
